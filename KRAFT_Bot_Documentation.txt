# KRAFT Bot システム概要

## 1. システム構成

### 1.1 主要コンポーネント
- **メインボット** (`bot.py`)
  - Discord Botのメインロジック
  - コマンド処理
  - イベントハンドリング

- **レベルシステム** (`level_system.py`, `level_commands.py`, `level_display.py`)
  - ユーザーレベル管理
  - XP計算
  - レベルアップ処理
  - 称号管理

- **投資システム** (`news_generator.py`, `firebase_investment_repair.py`)
  - 株式取引
  - ニュース生成
  - 株価変動
  - ポートフォリオ管理

- **クエストシステム** (`check_quests.py`)
  - クエスト登録
  - 達成管理
  - 報酬処理

### 1.2 データベース構造
- **Firestore Collections**
  - `users`: ユーザー情報
  - `market_news`: 投資ニュース
  - `companies`: 企業情報
  - `price_changes`: 株価変動履歴
  - `donation_targets`: 寄付先情報
  - `quests`: クエスト情報

## 2. 主要機能

### 2.1 レベルシステム
- **XP獲得方法**
  - メッセージ送信
  - クエスト達成
  - 日次ログイン

- **レベルアップ報酬**
  - KR（通貨）獲得
  - 称号付与
  - 特別報酬（マイルストーンレベル）

- **称号システム**
  - レベルに応じた称号
  - クエスト達成による称号
  - 寄付実績による称号
  - 投資実績による称号

### 2.2 投資システム
- **取引可能企業**
  - Wicrosoft (WICR): AI・Bot開発
  - Qoogle (QOOG): 量子コンピュータ
  - Roblux (RBLX): ゲーム開発
  - Netfox (NFOX): 動画配信
  - Mosla (MOSL): 再生エネルギー
  - Nikuda (NKDA): 物流・配送
  - Firma Schnitzel (FSCH): バイオテクノロジー
  - Iroha (IRHA): 医療IT
  - Strike (STRK): デジタル決済
  - Assist (ASST): 銀行・金融

- **ニュース生成**
  - Claude APIを使用
  - 企業特性に基づくニュース
  - 株価への影響度評価

### 2.3 クエストシステム
- **クエスト機能**
  - 自由なクエスト登録
  - 期日設定
  - 達成報告
  - 報酬獲得

### 2.4 寄付システム
- **寄付機能**
  - 任意のプロジェクトへの寄付
  - 寄付先管理
  - 寄付実績に基づく称号

### 2.5 週間レポート
- **統計情報**
  - コミュニティ活動
  - レベルアップ実績
  - クエスト達成状況
  - アクティブメンバー分析

## 3. コマンド一覧

### 3.1 一般ユーザーコマンド
- `/寄付`: プロジェクトへの寄付
- `/クエスト登録`: 新規クエストの登録
- `/クエスト達成`: クエストの達成報告
- `/クエスト状況`: 進行中のクエスト確認
- `/プロフィール`: ユーザー情報の表示
- `/ニックネーム設定`: ウェブサイト用ニックネーム設定
- `/残高`: KR残高の確認
- `/送金`: 他のユーザーへのKR送金
- `/株式購入`: 株式の購入
- `/株式売却`: 株式の売却
- `/ポートフォリオ`: 投資ポートフォリオの表示
- `/今週の統計`: 週間統計の表示

### 3.2 管理者コマンド
- `/寄付先追加`: 新しい寄付先の追加
- `/寄付先確認`: 寄付先一覧の確認
- `/ニュース生成`: 投資ニュースの手動生成
- `/期限切れテスト`: 期限切れクエスト処理の強制実行
- `/称号整理`: 削除予定の称号の整理
- `/週刊レポート生成`: 週間レポートの生成
- `/ポッドキャスト投稿`: 週間レポートの投稿

## 4. 技術スタック

### 4.1 使用技術
- **言語**: Python
- **フレームワーク**: Discord.py
- **データベース**: Firebase Firestore
- **AI**: Claude API (Anthropic)
- **環境変数管理**: python-dotenv

### 4.2 外部サービス
- **Discord**: プラットフォーム
- **Firebase**: データベース
- **Anthropic**: ニュース生成

## 5. 設定ファイル

### 5.1 環境変数
- `DISCORD_TOKEN`: Discord Botトークン
- `CLAUDE_API_KEY`: Claude APIキー

### 5.2 設定ファイル
- `firebase_credentials.json`: Firebase認証情報
- `requirements.txt`: 依存パッケージ一覧

## 6. 今後の課題

### 6.1 技術的課題
- コードの整理と最適化
- エラーハンドリングの強化
- テストの充実
- パフォーマンス最適化

### 6.2 機能的な課題
- ドキュメントの整備
- モニタリング機能の追加
- セキュリティ強化
- スケーラビリティの向上 